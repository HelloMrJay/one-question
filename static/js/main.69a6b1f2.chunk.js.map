{"version":3,"sources":["assets/images/Logo.png","components/form/index.tsx","components/menu/index.tsx","pages/layout/BaseLayout.tsx","components/page-title/index.tsx","components/modal/index.tsx","pages/user/list/index.tsx","pages/home/index.tsx","api/index.ts","api/user/index.ts","pages/login/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","InputType","MenuComponent","history","useHistory","theme","mode","defaultOpenKeys","defaultSelectedKeys","SubMenu","key","title","UserOutlined","Item","onClick","push","Header","Layout","Sider","Content","BaseLayout","props","useState","collapsed","toggleCollapsed","avatar","name","userInfo","setUserInfo","useEffect","localStorage","getItem","JSON","parse","trigger","collapsible","className","style","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","paddingRight","size","src","margin","minHeight","children","PageTitle","document","withModal","WrappedComponent","this","cancelText","okText","Component","FormComponent","fields","map","filed","type","placeholder","INPUT","width","PASSWORD","Password","genInput","label","labelCol","span","rules","required","message","Modal","UserList","visible","setVisible","onCancel","onOk","Home","path","component","_axios","axios","create","timeout","interceptors","request","use","config","error","Promise","reject","response","data","login","params","a","$http","post","tailLayout","wrapperCol","offset","layout","Login","onFinishHandler","values","res","setItem","stringify","console","log","require","height","alt","onFinish","autoComplete","prefix","LockOutlined","htmlType","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.69a6b1f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.18fb79cd.png\";","import React from 'react';\nimport {Form, Input} from 'antd';\nimport { Store, ValidateErrorEntity } from \"rc-field-form/lib/interface\";\nimport {ColProps} from \"antd/lib/grid/col\";\n\ninterface Rules {\n  required?: boolean,\n  message?: string,\n  pattern?: RegExp\n}\n\ninterface FormItem {\n  label: string,\n  name: string,\n  type: string,\n  key: string,\n  placeholder: string,\n  labelCol: ColProps,\n  rules?: Array<Rules>\n}\n\ninterface FormProps {\n  onFinish?: (values: Store) => void,\n  onFinishFailed?: (errorInfo: ValidateErrorEntity) => void,\n  fields: Array<FormItem>\n}\n\nenum InputType {\n  INPUT = 'input',\n  PASSWORD = 'password'\n}\n\nconst genInput = (type: string, placeholder: string) => {\n  switch (type) {\n    case InputType.INPUT:\n      return <Input style={{width: '188px'}} placeholder={placeholder} />\n    case InputType.PASSWORD:\n      return <Input.Password style={{width: '188px'}} placeholder={placeholder} />\n    default:\n      return <Input style={{width: '188px'}} placeholder={placeholder} />\n  }\n}\n\nconst FormComponent: React.FC<FormProps> = (props) => {\n  return (\n    <div className=\"form-container\">\n      <Form\n        name=\"basic-form\"\n        {...props}\n      >\n        {\n          props.fields.map(filed =>\n            <Form.Item {...filed}>\n              { genInput(filed.type, filed.placeholder) }\n            </Form.Item>\n          )\n        }\n      </Form>\n    </div>\n  )\n}\n\nexport default FormComponent;\n","import {\n  UserOutlined,\n} from '@ant-design/icons';\nimport { Menu } from 'antd';\nimport React from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nconst MenuComponent: React.FC = () => {\n  const history = useHistory();\n  return (\n    <Menu theme=\"dark\" mode=\"inline\" defaultOpenKeys={['user']} defaultSelectedKeys={['list']}>\n      <Menu.SubMenu\n        key=\"user\"\n        title={\n          <span>\n            <UserOutlined />\n            <span>用户信息</span>\n          </span>\n        }\n      >\n        <Menu.Item key=\"list\" onClick={() => history.push(\"/user/list\")}>\n          用户列表\n        </Menu.Item>\n        <Menu.Item key=\"2\">发布统计</Menu.Item>\n      </Menu.SubMenu>\n    </Menu>\n  )\n}\n\nexport default MenuComponent;\n","import React, { useState, useEffect } from 'react';\nimport { Layout, Avatar } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined\n} from '@ant-design/icons';\nimport './index.less';\nimport Menu from '../../components/menu'\nconst { Header, Sider, Content } = Layout;\n\ninterface Prop {\n  children: React.ReactNode;\n}\n\nconst BaseLayout: React.FC<Prop> = (props) => {\n  const [collapsed, toggleCollapsed] = useState(false);\n  const [userInfo, setUserInfo] = useState({ avatar: '', name: '' });\n  useEffect(() => {\n    const userInfo = localStorage.getItem('USER_INFO')\n    if (typeof userInfo === \"string\") {\n      setUserInfo(JSON.parse(userInfo))\n    }\n  }, [])\n  return (\n    <Layout>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"global-sider-menu-logo\">\n          <span className=\"project-title\">One Question</span>\n        </div>\n        <Menu />\n      </Sider>\n      <Layout>\n        <Header className=\"site-layout-background-header\" style={{ padding: 0 }}>\n          {React.createElement(\n            collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n            {\n              className: \"trigger\",\n              onClick: () => {\n                toggleCollapsed(!collapsed);\n              },\n            }\n          )}\n          <span>\n            <span className=\"user-info-name\" style={{ paddingRight: '15px' }}>{userInfo.name}</span>\n            <Avatar size={30} src={userInfo.avatar} />\n          </span>\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: \"24px 16px\",\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          {props.children}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default BaseLayout;\n","import React, { useEffect } from \"react\";\nimport './index.scss';\n\ninterface PageTitleProp {\n  title: string\n}\n\nconst PageTitle: React.FC<PageTitleProp> = (props) => {\n  useEffect(() => {\n    document.title = props.title\n  }, [props.title])\n  return (\n    <div className=\"page-title-container\">\n      <span className=\"page-title-content\">{props.title}</span>\n    </div>\n  )\n}\n\nexport default PageTitle\n","import React from 'react';\nimport { Modal } from 'antd';\n\nexport interface WithModalProps {\n  onCancel: () => void,\n  onOk: () => void,\n  visible: boolean,\n  title: string,\n  cancelText?: string,\n  okText?: string\n}\n\nconst withModal = <P extends WithModalProps>(WrappedComponent: React.ComponentType<P & WithModalProps>) => {\n  return class ModalContainer extends React.Component<P & WithModalProps, {}>{\n    render() {\n      return (\n        <Modal\n          {...this.props}\n          cancelText={this.props.cancelText || '取 消'}\n          okText={this.props.okText || '确 定'}\n        >\n          <WrappedComponent {...this.props as P} />\n        </Modal>\n      );\n    }\n  }\n}\n\nexport default withModal;\n","import React, { useState } from 'react';\nimport { Button, Input } from 'antd';\nimport PageTitle from '../../../components/page-title';\nimport withModal, { WithModalProps } from '../../../components/modal';\nimport Form from '../../../components/form'\nimport './index.scss';\n\nconst fields = [\n  {\n    label: '用户名',\n    name: 'username',\n    type: 'input',\n    key: 'username',\n    placeholder: '请输入用户名',\n    labelCol: { span: 6 },\n    rules: [{ required: true, message: '请输入用户名' }]\n  },\n  {\n    label: '密码',\n    name: 'password',\n    type: 'password',\n    key: 'password',\n    placeholder: '请输入密码',\n    labelCol: { span: 6 },\n    rules: [{ required: true, message: '请输入密码' }]\n  },\n  {\n    label: '邮箱',\n    name: 'email',\n    type: 'input',\n    key: 'email',\n    placeholder: '请输入邮箱',\n    labelCol: { span: 6 },\n    rules: [{ required: true, message: '请输入邮箱' }]\n  }\n]\n\n@withModal\nclass Modal extends React.Component<WithModalProps> {\n  render() {\n    return (\n      <Form fields={fields} />\n    )\n  }\n}\n\nconst UserList:React.FC = () => {\n  const [visible, setVisible] = useState(false)\n  const addStaffHandler = () => {\n    setVisible(true)\n  }\n\n  return (\n    <div className=\"user-list-container\">\n      <div className=\"user-list__header\">\n        <PageTitle title=\"用户列表\" />\n        <div className=\"filter-wrapper\">\n          <div className=\"w188\">\n            <Input placeholder=\"请输入关键字\" />\n          </div>\n          <Modal\n            onCancel={() => setVisible(false)}\n            visible={visible}\n            title={'新增用户'}\n            onOk={() => setVisible(false)}\n          />\n          <Button type=\"primary\" onClick={() => addStaffHandler()}>新增用户</Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserList;\n","import React, { useEffect } from 'react';\nimport BaseLayout from '../layout/BaseLayout'\nimport { Route, useHistory } from \"react-router-dom\";\nimport UserList from \"../user/list\";\n\nconst Home: React.FC = () => {\n  const history = useHistory()\n\n  useEffect(() => {\n    !localStorage.getItem('USER_INFO') && history.push('/login')\n  }, [])\n  return (\n    <div className=\"home-container\">\n      <BaseLayout>\n        <Route path=\"/user/list\" component={UserList} />\n      </BaseLayout>\n    </div>\n  )\n}\n\nexport default Home;\n","import axios from 'axios';\nimport { message } from 'antd'\n\nconst _axios = axios.create({\n  timeout: 60 * 1000\n});\n\n_axios.interceptors.request.use(  (config) => {\n    // Do something before request is sent\n    return config\n  },\n  (error) => {\n    // Do something with request error\n    return Promise.reject(error)\n  })\n\n_axios.interceptors.response.use(\n  (response) => {\n    // Do something with response data\n    return response.data\n  },\n  (error) => {\n    // Do something with response error\n    message.error(error.response.data)\n    return Promise.reject(error)\n  }\n)\n\nexport default _axios;\n","import { LoginForm } from '../../model/user';\nimport $http from '../../api'\n\nexport const login = async (params: LoginForm) => {\n  return await $http.post('/api/user/login', params)\n}\n","import React from \"react\";\nimport \"./login.scss\";\nimport {\n  Form,\n  Input,\n  Button,\n  Col\n} from 'antd';\nimport { LoginForm } from '../../model/user';\n// @ts-ignore\nimport { login } from '@/api/user';\nimport { useHistory } from 'react-router-dom'\n\nimport {\n  UserOutlined,\n  LockOutlined\n} from '@ant-design/icons';\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst Login: React.FC = () => {\n  const history = useHistory()\n\n  const onFinishHandler = async (values: LoginForm) => {\n    let res = await login(values)\n    if (res) {\n      localStorage.setItem('USER_INFO', JSON.stringify(res))\n      history.push('/home')\n    }\n    console.log(res)\n  }\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-wrapper\">\n        <div className=\"login-form__header\">\n          <Col span={3} />\n          <img src={require('@image/Logo.png')} width=\"100%\" height=\"80px\" alt=\"\"/>\n        </div>\n\n        <div className=\"login-form__content\">\n          <Form\n            {...layout}\n            name=\"basic\"\n            onFinish={(values) => onFinishHandler(values as LoginForm)}\n          >\n            <Form.Item\n              label=\"用户名\"\n              name=\"username\"\n              rules={[{ required: true, message: '请输入用户名!' }]}\n            >\n              <Input placeholder=\"请输入用户名\" autoComplete=\"off\" prefix={<UserOutlined />} />\n            </Form.Item>\n\n            <Form.Item\n              label=\"密码\"\n              name=\"password\"\n              rules={[{ required: true, message: '请输入密码!' }]}\n            >\n              <Input.Password prefix={<LockOutlined />} placeholder=\"请输入密码\" />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                登 录\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Home from \"./pages/home\";\nimport Login from \"./pages/login\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}